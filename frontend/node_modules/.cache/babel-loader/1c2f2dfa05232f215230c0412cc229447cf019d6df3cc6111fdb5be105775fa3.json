{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = {\n        username: action.payload.username,\n        role: action.payload.role\n      };\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","username","payload","role","setItem","loginFailure","logout","removeItem","actions","reducer"],"sources":["/Users/kriztoperurmeneta/Development/quizto/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = {\n        username: action.payload.username,\n        role: action.payload.role,\n      };\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChDE,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACX,IAAI,GAAG;QACXc,QAAQ,EAAED,MAAM,CAACE,OAAO,CAACD,QAAQ;QACjCE,IAAI,EAAEH,MAAM,CAACE,OAAO,CAACC;MACvB,CAAC;MACDL,KAAK,CAACV,KAAK,GAAGY,MAAM,CAACE,OAAO,CAACd,KAAK;MAClCC,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEJ,MAAM,CAACE,OAAO,CAACd,KAAK,CAAC;IACrD,CAAC;IACDiB,YAAY,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDI,MAAM,EAAGR,KAAK,IAAK;MACjBA,KAAK,CAACX,IAAI,GAAG,IAAI;MACjBW,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BF,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,UAAU;EAAEE,YAAY;EAAEM,YAAY;EAAEC;AAAO,CAAC,GAAGZ,SAAS,CAACc,OAAO;AAEnF,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}